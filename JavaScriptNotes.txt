JavaScript Output
 JavaScript can "display" data in different ways:

1) Writing into an HTML element, using innerHTML.
________Using innerHTML_________________
To access an HTML element, JavaScript can use the document.getElementById(id) method.
The id attribute defines the HTML element. The innerHTML property defines the HTML content:

Changing the innerHTML property of an HTML element is a common way to display data in HTML.

   2)Writing into the HTML output
Using document.write()
For testing purposes, it is convenient to use document.write():

( Using document.write() after an HTML document is loaded, will delete all existing HTML: )
The document.write() method should only be used for testing.

   3)Writing into an alert box,
Using window.alert()
You can use an alert box to display data:
You can skip the window keyword.

In JavaScript, the window object is the global scope object. This means that variables, properties, and methods by default belong to the window object. This also means that specifying the window keyword is optional:


   4)Writing into the browser console, 
Using console.log()
For debugging purposes, you can call the console.log() method in the browser to display data.


________JavaScript Print______________
JavaScript does not have any print object or print methods.

You cannot access output devices from JavaScript.

The only exception is that you can call the window.print() method in the browser to print the content of the current window.

JavaScript Variables
Variables are Containers for Storing Data
1) Automatically
2) Using var
3) Using let
4) Using const

When to Use var, let, or const?
1. Always declare variables

2. Always use const if the value should not be changed

3. Always use const if the type should not be changed (Arrays and Objects)

4. Only use let if you can't use const

5. Only use var if you MUST support old browsers.
JavaScript Variables can be declared in 4 ways:

JavaScript Let:-
The let keyword was introduced in ES6 (2015)
Variables declared with let have Block Scope
Variables declared with let must be Declared before use

JavaScript Const:-
The const keyword was introduced in ES6 (2015)
Variables defined with const cannot be Redeclared
Variables defined with const cannot be Reassigned
Variables defined with const have Block Scope

When to use JavaScript const?
Always declare a variable with const when you know that the value should not be changed.

Use const when you declare:

A new Array
A new Object
A new Function
A new RegExp



Variables declared with let cannot be Redeclared in the same scope
